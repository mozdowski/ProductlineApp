name: Build and deploy ASP.Net Core app with React frontend to Azure Web App

env:
  AZURE_WEBAPP_NAME: productline-app    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: ./src/ProductlineApp.WebUI   # set this to the path of your web app project, including the frontend React app
  DOTNET_VERSION: '6.0'                 # set this to the .NET Core version to use

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'   # Set the appropriate Node.js version for your React app

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build Backend with dotnet
        run: dotnet build --configuration Release

      - name: Build Frontend with npm
        working-directory: src/ProductlineApp.WebUI/ClientApp   # Change to the frontend folder path
        run: npm install && npm run build

      - name: Publish Backend
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload Backend artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

      - name: Upload Frontend artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: react-app
          path: src/ProductlineApp.WebUI/ClientApp/build   # Change to the React app build folder path

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download Backend artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Download Frontend artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: react-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
